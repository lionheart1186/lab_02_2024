knitr::knit_hooks$set(inline = function(x) { knitr:::format_sci(x, 'md')})
knitr::opts_chunk$set(echo = TRUE)
options(dplyr.summarise.inform = FALSE)
# This section loads necessary R libraries and sources scripts that define
# useful functions format_md.
#
data_dir = "_data"
script_dir = "_scripts"
if (! require("pacman")) {
stop(paste0('Before you can knit this file, you need to install the ',
'"pacman" package.\n',
'In RStudio, click on the "Packages" tab and click "Install",\n',
'Then type "pacman" in the "Packages" box and click on ',
'"Install".\n',
'After the package installs, you should be good to go.'))
}
install.packages("pacman")
knitr::knit_hooks$set(inline = function(x) { knitr:::format_sci(x, 'md')})
knitr::opts_chunk$set(echo = TRUE)
options(dplyr.summarise.inform = FALSE)
# This section loads necessary R libraries and sources scripts that define
# useful functions format_md.
#
data_dir = "_data"
script_dir = "_scripts"
if (! require("pacman")) {
stop(paste0('Before you can knit this file, you need to install the ',
'"pacman" package.\n',
'In RStudio, click on the "Packages" tab and click "Install",\n',
'Then type "pacman" in the "Packages" box and click on ',
'"Install".\n',
'After the package installs, you should be good to go.'))
}
library(pacman)
p_load(knitr, tidyverse, slider, broom, janitor)
theme_set(theme_bw(base_size = 15))
data_dir = "_data"
script_dir = "_scripts"
# Create a data directory if one does not exist.
if (!dir.exists(data_dir)) dir.create(data_dir)
source(file.path(script_dir, 'utils.R'), chdir = T)
source(file.path(script_dir, 'modtran.R'), chdir = T)
mlo_url = str_c("https://scrippsco2.ucsd.edu/assets/data/atmospheric/stations/",
"in_situ_co2/monthly/monthly_in_situ_co2_mlo.csv")
giss_url = "https://data.giss.nasa.gov/gistemp/tabledata_v4/GLB.Ts+dSST.csv"
if (!file.exists('_data/mlo_data.csv')) {
download.file(mlo_url, '_data/mlo_data.csv')
}
mlo_data = read_csv('_data/mlo_data.csv',
skip = 57,  # skip the first 57 rows
col_names = c('year', 'month', 'date.excel', 'date',
'co2_raw', 'co2_raw_seas',
'co2_fit', 'co2_fit_seas',
'co2_filled', 'co2_filled_seas'),
col_types = 'iiiddddddd',
# ^^^ the first three columns are integers and the  next
# 7 are real numbers
na = '-99.99'
# ^^^ interpret -99.99 as a missing value
) %>% clean_names()
mlo_simple = mlo_data %>% select(year, month, date, co2 = co2_filled)
mlo_data_adjusted = mlo_simple %>%
mutate(co2_annual = slide_vec(co2, mean, .before = 5, .after = 6))
library(broom)
co2_fit = lm(co2 ~ date, data = mlo_simple)
co2_trend = coef(co2_fit)['date']
detach("package:pacman", unload = TRUE)
mlo_seas = mlo_data %>% select (date, co2_seas = co2_filled_seas)
head(mlo_seas)
library(broom)
co2_fit = lm(co2 ~ date, data = mlo_simple)
co2_trend = coef(co2_fit)['date']
library(broom)
co2_fit = lm(co2 ~ date, data = mlo_simple)
co2_trend = coef(co2_fit)['date']
mlo_simple = mlo_data %>% select(year, month, date, co2 = co2_filled)
mlo_data = read_csv('_data/mlo_data.csv',
skip = 57,  # skip the first 57 rows
col_names = c('year', 'month', 'date.excel', 'date',
'co2_raw', 'co2_raw_seas',
'co2_fit', 'co2_fit_seas',
'co2_filled', 'co2_filled_seas'),
col_types = 'iiiddddddd',
# ^^^ the first three columns are integers and the  next
# 7 are real numbers
na = '-99.99'
# ^^^ interpret -99.99 as a missing value
) %>% clean_names()
mlo_simple = mlo_data %>% select(year, month, date, co2 = co2_filled)
mlo_seas = mlo_data %>% select (date, co2_seas = co2_filled_seas)
head(mlo_seas)
# TODO
# put your R code here
# remember to use geom_smooth to include a linear fit.
ggplot(mlo_seas, aes(x = date, y = co2_seas)) + geom_line()
# TODO
# put your R code here
# remember to use geom_smooth to include a linear fit.
ggplot(mlo_seas, aes(x = date, y = co2_seas)) + geom_line() + geom_smooth()
# TODO
# put your R code here
# remember to use geom_smooth to include a linear fit.
ggplot(mlo_seas, aes(x = date, y = co2_seas)) + geom_line() + geom_smooth() + labs( x = "Date", y = "Co2 Concentration (PPM)", title = "Seas Chart")
# TODO
# put your R code here
# remember to use geom_smooth to include a linear fit.
ggplot(mlo_seas, aes(x = date, y = co2_seas)) + geom_smooth() + labs( x = "Date", y = "Co2 Concentration (PPM)", title = "Seas Chart")
# TODO
# put your R code here
# remember to use geom_smooth to include a linear fit.
ggplot(mlo_seas, aes(x = date, y = co2_seas)) +  labs( x = "Date", y = "Co2 Concentration (PPM)", title = "Seas Chart")
# TODO
# put your R code here
# remember to use geom_smooth to include a linear fit.
ggplot(mlo_seas, aes(x = date, y = co2_seas)) + geom_smooth() + labs( x = "Date", y = "Co2 Concentration (PPM)", title = "Seas Chart")
# TODO
# put your R code here
# remember to use geom_smooth to include a linear fit.
ggplot(mlo_seas, aes(x = date, y = co2_seas)) + geom_line() + labs( x = "Date", y = "Co2 Concentration (PPM)", title = "Seas Chart")
# TODO
# put your R code here to set trend_seas
trend_seas = lm(co2_seas ~ date, data = mlo_seas)
library(broom)
tidy(trend_seas)
# TODO
# put your R code here to set trend_seas
fit_seas = lm(co2_seas ~ date, data = mlo_seas)
library(broom)
tidy(fit_seas)
trend_seas = coef(fit_seas)['date']
print(trend_seas)
# TODO
# put your R code here to set trend_seas
fit_seas = lm(co2_seas ~ date, data = mlo_seas)
library(broom)
tidy(fit_seas)
trend_seas = coef(fit_seas)['date']
print(trend_seas)
print(co2_fit)
# TODO
# put your R code here to set trend_seas
fit_seas = lm(co2_seas ~ date, data = mlo_seas)
library(broom)
tidy(fit_seas)
trend_seas = coef(fit_seas)['date']
print(trend_seas)
print(co2_trend)
# TODO
# put your R code here to set trend_seas
fit_seas = lm(co2_seas ~ date, data = mlo_seas)
library(broom)
tidy(fit_seas)
trend_seas = coef(fit_seas)['date']
print(trend_seas)
print(co2_fit)
print(co2_trend)
# TODO
# put your R code here to set trend_seas
fit_seas = lm(co2_seas ~ date, data = mlo_seas)
library(broom)
tidy(fit_seas)
trend_seas = coef(fit_seas)['date']
print(trend_seas)
print(co2_trend)
if (! file.exists(`_data/global_temp_land_sea.csv`)) {
download.file (giss_url, `_data/global_temp_land_sea.csv`)
}
if (! file.exists(`_data/global_temp_land_sea.csv`)) {
download.file (giss_url, `_data/global_temp_land_sea.csv`)
}
if (! file.exists('_data/global_temp_land_sea.csv')) {
download.file (giss_url, '_data/global_temp_land_sea.csv')
}
# TODO
# Put your R code here to call read_csv and read "global_temp_land_sea.csv"
# and assign the data to a variable giss_temp
giss_temp = read_csv('_data/global_temp_land_sea.csv', col_names = TRUE, skip = 1, col_types = idddddddddddddddddd, na = '***')
# TODO
# Put your R code here to call read_csv and read "global_temp_land_sea.csv"
# and assign the data to a variable giss_temp
giss_temp = read_csv('_data/global_temp_land_sea.csv', col_names = TRUE, skip = 1, col_types = 'idddddddddddddddddd', na = '***')
head(giss_temp)
# Then, show the first 5 lines of giss_temp:
# head(giss_temp, 5)
giss_monthly = giss_data %>% select (Year:December)
giss_monthly = giss_temp %>% select (Year:December)
giss_monthly = giss_temp %>% select ('Year':'December')
giss_monthly = giss_temp %>% select ('Year':'Dec')
head(giss_monthly)
# TODO
# put your R code here to make the variable giss_g
giss_g = giss_temp %>% pivot_longer(cols = -Year, names_to= 'month', values_to = 'anomaly')
head(giss_g)
giss_g = giss_g %>%
mutate(month = factor(month, levels = month.abb, ordered = TRUE),
date = Year + (as.integer(month) - 0.5) / 12) %>%
arrange(date)`
head(giss_g)
giss_g = giss_g %>%
mutate(month = factor(month, levels = month.abb, ordered = TRUE),
date = Year + (as.integer(month) - 0.5) / 12) %>%
arrange(date)
head(giss_g)
# TODO
# put your R code here
#
# Here in the comments is an example of the kind of thing you might want to
# use, but you will need to fill in some details, such as the data and
# aesthetics for ggplot() and which geometries you want to plot (geom_xxx is not
# a real geometry).
#
ggplot(giss_g) + geom_line()
# TODO
# put your R code here
#
# Here in the comments is an example of the kind of thing you might want to
# use, but you will need to fill in some details, such as the data and
# aesthetics for ggplot() and which geometries you want to plot (geom_xxx is not
# a real geometry).
#
ggplot(giss_g, aes(x = date, y = anomaly)) + geom_line()
# # specify the data and the mappings of variables to plot aesthetics
# geom_xxx() +
# # put the geometries (lines, points, etc) that you want to plot
# labs() +
# # label the axes
# ... # put any other characteristics here.
# TODO
# put your R code here
#
# Here in the comments is an example of the kind of thing you might want to
# use, but you will need to fill in some details, such as the data and
# aesthetics for ggplot() and which geometries you want to plot (geom_xxx is not
# a real geometry).
#
ggplot(giss_g, aes(x = date, y = anomaly)) + geom_line() + labs(title = 'Temperature Anomalies Over Time', x = 'Year', y = 'Temperature Anomaly')
# # specify the data and the mappings of variables to plot aesthetics
# geom_xxx() +
# # put the geometries (lines, points, etc) that you want to plot
# labs() +
# # label the axes
# ... # put any other characteristics here.
